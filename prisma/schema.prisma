// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model College {
  id          Int                @id @default(autoincrement())
  name        String            @db.VarChar(255)
  score       Int
  city        City              @relation(fields: [cityId], references: [id])
  cityId      Int
  state       State             @relation(fields: [stateId], references: [id])
  stateId     Int
  placements  CollegePlacement[]
  courses     CollegeWiseCourse[]

  @@index([score(sort: Desc)])
  @@index([cityId])
  @@index([stateId])

}

model CollegePlacement {
  id                Int      @id @default(autoincrement())
  college          College  @relation(fields: [collegeId], references: [id])
  collegeId        Int
  year             Int
  highestPlacement Decimal  @db.Decimal(10, 2)
  averagePlacement Decimal  @db.Decimal(10, 2)
  medianPlacement  Decimal  @db.Decimal(10, 2)
  placementRate    Decimal  @db.Decimal(5, 2)

  @@index([collegeId])
  @@index([year])
}

model CollegeWiseCourse {
  id             Int      @id @default(autoincrement())
  college        College  @relation(fields: [collegeId], references: [id])
  collegeId      Int
  courseName     String   @db.VarChar(255)
  courseDuration Int
  courseFee      Decimal  @db.Decimal(10, 2)

  
}

model State {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  colleges College[]
  cities   City[]

  @@map("States")

}

model City {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  state    State     @relation(fields: [stateId], references: [id])
  stateId  Int
  colleges College[]

   @@index([stateId])
}